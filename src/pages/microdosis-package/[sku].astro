---
import Layout from "../../layouts/Layout.astro";
import PackageHeader from "../../components/PackageHeader.astro";
import PackageDescription from "../../components/PackageDescription.astro";
import PaymentOptions from "../../components/ReactComponents/PaymentOptions";
import GuaranteeBox from "../../components/GuaranteeBox.astro";
import OrderSummary from "../../components/OrderSummary.astro";
import NotFound from "../../components/ReactComponents/NotFound";

const { sku } = Astro.params;
let packageData = null;
let stockInfo = null;

const siteUrl =
  import.meta.env.SITE ||
  "https://microdosis-ilumina-git-products-revised-multicompras.vercel.app";

try {
  const response = await fetch(`${siteUrl}/api/check-stock?productId=${sku}`, {
    headers: {
      "Content-Type": "application/json",
    },
  });
  stockInfo = await response.json();

  if (
    !stockInfo ||
    stockInfo.code === "PRODUCT_NOT_FOUND" ||
    stockInfo.code === "MISSING_PRODUCT_ID"
  ) {
    throw new Error("Producto no encontrado o no tiene stock disponible.");
  }
  packageData = {
    title: `Paquete ${sku}`,
    price: 100,
    originalPrice: 120,
    savings: 20,
    description: `Descripci√≥n para el paquete ${sku}`,
  };
  console.log("Stock Info", stockInfo);
} catch (error: unknown) {
  if (error instanceof Error) {
    if (
      error.message === "Producto no encontrado o no tiene stock disponible."
    ) {
      console.warn(`Paquete con SKU ${sku} no encontrado o sin stock.`);
      Astro.response.status = 404;
    } else {
      console.error("Error inesperado:", error);
      Astro.response.status = 500;
    }
  }
}
---

{
  packageData ? (
    <Layout>
      <div class="package-container">
        <div class="package-detail">
          <PackageHeader
            title={packageData.title}
            price={packageData.price}
            originalPrice={packageData.originalPrice}
            savings={packageData.savings}
          />
          <PackageDescription description={packageData.description} />
          <PaymentOptions
            client:load
            basePrice={packageData.price}
            title={packageData.title}
            packageId={sku}
          />
          <GuaranteeBox />
        </div>
        <OrderSummary title={packageData.title} price={packageData.price} />
      </div>
    </Layout>
  ) : (
    <Layout>
      <NotFound client:load />
    </Layout>
  )
}

<style>
  html {
    font-size: 14px;
    color: #333;
  }
  .package-container {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: 1rem;
    max-width: 1000px;
    margin: 2rem auto;
    padding: 0 1rem;
  }
  @media (max-width: 768px) {
    .package-container {
      grid-template-columns: 1fr;
    }
  }
  .package-detail {
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    overflow: hidden;
  }
</style>
